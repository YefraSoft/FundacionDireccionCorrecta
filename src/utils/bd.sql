DROP DATABASE IF EXISTS sinhambre;

CREATE DATABASE sinhambre;

USE sinhambre;

-- DATOS PARA FACTURACION
CREATE TABLE tax_data (
    rfc VARCHAR(13) PRIMARY KEY NOT NULL, -- RFC UNICO PARA CADA EMPRESA O PATROCINADOR
    street VARCHAR(50) NOT NULL, -- CALLE
    colony VARCHAR(50) NOT NULL, -- COLONIA
    town VARCHAR(50) NOT NULL, -- MUNICIPIO O POBLADO
    city VARCHAR(50) NOT NULL, -- CIUDAD
    postal_code VARCHAR(6) NOT NULL, -- CODIGO POSTAL
    tax_regime_code TINYINT NOT NULL -- CODIGO DEL REGIMEN FISCAL
);

-- CREDENCIALES
CREATE TABLE credentials (
    user VARCHAR(50) PRIMARY KEY NOT NULL, -- NOMBRE DE USUARIO O CORREO ELECTRONICO
    email VARCHAR(50) NOT NULL, -- CORREO ELECTRONICO
    password VARCHAR(255) NOT NULL, -- CONTRASEÃ‘A CIFRADA
    is_verified BOOLEAN DEFAULT FALSE, -- VERIFICACION DE CORREO
    role ENUM(
        'SPONSOR',
        'COMPANY',
        'BRANCH'
    ) NOT NULL -- ROL DE USUARIO
);

-- PATROCINADORES
CREATE TABLE sponsor (
    sponsor_user VARCHAR(50) NOT NULL, -- USUARIO DEL PATROCINADOR (CLAVE FORANEA)
    image_profile_url VARCHAR(255), -- URL DE LA IMAGEN DE PERFIL
    full_name VARCHAR(60) NOT NULL, -- NOMBRE COMPLETO
    is_auditor BOOLEAN DEFAULT FALSE, -- SI ES AUDITOR O NO
    curp VARCHAR(18) PRIMARY KEY NOT NULL, -- CURP UNICO DEL PATROCINADOR
    rfc VARCHAR(13), -- RFC SI APLICA
    FOREIGN KEY (sponsor_user) REFERENCES credentials (user), -- RELACION CON CREDENCIALES
    FOREIGN KEY (rfc) REFERENCES tax_data (rfc) -- RELACION CON DATOS FISCALES
);

-- EMPRESAS
CREATE TABLE company (
    rfc VARCHAR(13) NOT NULL, -- RFC UNICO
    user VARCHAR(50) NOT NULL, -- USUARIO RELACIONADO
    business_class ENUM(
        'FOOD',
        'CLOTHING',
        'SCHOOL',
        'GROCERIES'
    ) NOT NULL, -- RUBRO DE LA EMPRESA
    company_name VARCHAR(150) PRIMARY KEY NOT NULL, -- RAZON SOCIAL
    alias VARCHAR(100), -- ALIAS DE LA EMPRESA
    founding_act_url VARCHAR(255) NOT NULL, -- URL DEL ACTA CONSTITUTIVA
    FOREIGN KEY (rfc) REFERENCES tax_data (rfc), -- RELACION CON DATOS FISCALES
    FOREIGN KEY (user) REFERENCES credentials (user) -- RELACION CON CREDENCIALES
);

-- ENCARGADO
CREATE TABLE attendant (
    attendant_id INT PRIMARY KEY AUTO_INCREMENT, -- ID DEL ENCARGADO
    name VARCHAR(30),
    last_name VARCHAR(30), -- NOMBRE COMPLETO DEL ENCARGADO
    shift INT -- TURNO DEL ENCARGADO
);

-- SUCURSALES
CREATE TABLE branches (
    branch_id INT PRIMARY KEY AUTO_INCREMENT, -- ID UNICO DE LA SUCURSAL
    branch_name VARCHAR(150) NOT NULL, -- NOMBRE DE LA SUCURSAL
    company_name VARCHAR(150) NOT NULL, -- RELACION CON EMPRESA (RAZON SOCIAL)
    address VARCHAR(150) NOT NULL, -- DIRECCION DE LA SUCURSAL
    attendant_id INT NOT NULL, -- RELACION CON ENCARGADO
    FOREIGN KEY (company_name) REFERENCES company (company_name), -- RELACION CON EMPRESA
    FOREIGN KEY (attendant_id) REFERENCES attendant (attendant_id) -- RELACION CON ENCARGADO
);

-- DONACIONES
CREATE TABLE donations (
    donation_id INT PRIMARY KEY NOT NULL AUTO_INCREMENT, -- ID DE DONACION
    company_name VARCHAR(150), -- EMPRESA RELACIONADA
    sponsor_curp VARCHAR(18), -- PATROCINADOR RELACIONADO
    destine_of_donation ENUM('PROJECT', 'REASON'), -- DESTINO DE LA DONACION
    amount DECIMAL(10, 2), -- MONTO DE LA DONACION
    date_created TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- FECHA DE CREACION
    payment_method ENUM(
        'DEBIT_CARD',
        'CREDIT_CARD',
        'CASH'
    ), -- METODO DE PAGO
    FOREIGN KEY (company_name) REFERENCES company (company_name), -- RELACION CON EMPRESA
    FOREIGN KEY (sponsor_curp) REFERENCES sponsor (curp) -- RELACION CON PATROCINADOR
);

-- FACTURAS
CREATE TABLE invoices (
    invoice_id INT PRIMARY KEY NOT NULL AUTO_INCREMENT, -- ID UNICO DE LA FACTURA
    donation_id INT NOT NULL, -- RELACION CON DONACION
    invoice_number VARCHAR(50) NOT NULL, -- NUMERO DE FACTURA O FOLIO
    receiver_company VARCHAR(100), -- EMPRESA QUE RECIBE
    receiver_sponsor VARCHAR(18), -- PATROCINADOR QUE RECIBE
    url_document TEXT NOT NULL, -- URL DEL DOCUMENTO
    FOREIGN KEY (donation_id) REFERENCES donations (donation_id) -- RELACION CON DONACION
);

-- REPORTES
CREATE TABLE reports (
    report_id INT PRIMARY KEY NOT NULL AUTO_INCREMENT, -- ID DEL REPORTE
    details VARCHAR(255) NOT NULL, -- DETALLES DEL REPORTE
    date_created TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- FECHA DE CREACION
    reason VARCHAR(100) NOT NULL, -- RAZON DEL REPORTE
    report_type ENUM(
        'PRODUCT',
        'DONATION',
        'BLOG',
        'OTHER',
        'PLATFORM',
        'PAYMENT',
        'EMBEZZLEMENT'
    ) NOT NULL, -- TIPO DE REPORTE
    report_status ENUM('PENDING', 'RESOLVED') DEFAULT 'PENDING', -- ESTADO DEL REPORTE
    reported_by VARCHAR(50) NOT NULL -- QUIEN LO REPORTO
);

-- AUDITACIONES
CREATE TABLE audit (
    audit_id INT PRIMARY KEY NOT NULL AUTO_INCREMENT, -- ID DE LA AUDITORIA
    auditor VARCHAR(18) NOT NULL, -- PATROCINADOR AUDITOR
    audited VARCHAR(150) NOT NULL, -- EMPRESA AUDITADA
    date_created TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- FECHA DE CREACION
    audit_status ENUM(
        'PENDING',
        'APPROVED',
        'REJECTED'
    ) DEFAULT 'PENDING', -- ESTADO DE AUDITORIA
    date_audition DATETIME NOT NULL, -- FECHA DE AUDITORIA
    details VARCHAR(255) NOT NULL, -- DETALLES DE LA AUDITORIA
    title VARCHAR(100) NOT NULL, -- TITULO DE LA AUDITORIA
    FOREIGN KEY (auditor) REFERENCES sponsor (curp), -- RELACION CON PATROCINADOR
    FOREIGN KEY (audited) REFERENCES company (company_name) -- RELACION CON EMPRESA
);

-- FONDOS
CREATE TABLE funds (
    id INT PRIMARY KEY NOT NULL AUTO_INCREMENT, -- ID de cada registro de fondos
    project_funds DECIMAL(30, 2), -- Fondos acumulados para proyectos
    donation_funds DECIMAL(30, 2), -- Fondos acumulados para donaciones
    goal_amount_donation DECIMAL(30, 2), -- Meta mensual de donaciones
    goal_amount_project DECIMAL(30, 2), -- Meta mensual de proyectos
    current_amount_donation DECIMAL(30, 2), -- Monto actual de donaciones para el mes
    current_amount_project DECIMAL(30, 2) -- Monto actual de proyectos para el mes
);

-- PRODUCTOS
CREATE TABLE products (
    product_id INT PRIMARY KEY NOT NULL AUTO_INCREMENT, -- ID DEL PRODUCTO
    class ENUM(
        'FOOD',
        'CLOTHING',
        'SCHOOL',
        'GROCERIES'
    ) NOT NULL, -- CLASIFICACION
    product_name VARCHAR(50) NOT NULL, -- NOMBRE DEL PRODUCTO
    product_desc VARCHAR(150) NOT NULL, -- DESCRIPCION DEL PRODUCTO
    product_price DECIMAL(10, 2) NOT NULL, -- PRECIO DEL PRODUCTO
    branch_id INT NOT NULL, -- ID DE LA SUCURSAL
    FOREIGN KEY (branch_id) REFERENCES branches (branch_id) -- RELACION CON SUCURSAL
);

-- PETICIONES DE PAGO
CREATE TABLE payments_requests (
    folio CHAR(36) PRIMARY KEY DEFAULT(UUID()), -- FOLIO DE LA SOLICITUD
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- FECHA DE CREACION
    image_url TEXT NOT NULL, -- URL DE IMAGEN
    applicant_branch INT NOT NULL, -- SOLICITANTE 
    amount DECIMAL(10, 2) NOT NULL, -- MONTO
    description VARCHAR(255) NOT NULL, -- DESCRIPCION DE LA SOLICITUD
    FOREIGN KEY (applicant_branch) REFERENCES branches (branch_id) -- RELACION CON SUCURSAL
);

-- DISPERSIONES
CREATE TABLE payments (
    folio CHAR(36) PRIMARY KEY DEFAULT(UUID()), -- FOLIO DEL PAGO
    pay_request_folio CHAR(36) NOT NULL, -- FOLIO DE LA SOLICITUD DE PAGO
    state ENUM(
        'IN_PROGRESS',
        'APPLIED',
        'REJECTED'
    ) NOT NULL, -- ESTADO DEL PAGO
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- FECHA DE CREACION
    updated_at DATETIME NOT NULL, -- FECHA DE ACTUALIZACION
    FOREIGN KEY (pay_request_folio) REFERENCES payments_requests (folio) -- RELACION CON SOLICITUD DE PAGO
);

-- FONDOS DISPONIBLES
CREATE TABLE available_funds (
    branch_id INT NOT NULL, -- ID DE SUCURSAL
    calc_day TIMESTAMP DEFAULT CURRENT_TIMESTAMP PRIMARY KEY, -- DIA DEL CALCULO DE FONDOS
    available_funds DECIMAL(30, 2), -- FONDOS DISPONIBLES
    FOREIGN KEY (branch_id) REFERENCES branches (branch_id) -- RELACION CON SUCURSAL
);

-- SISTEMA DE RECOMPENSAS
CREATE TABLE donor_awards (
    award_id INT PRIMARY KEY AUTO_INCREMENT, -- ID DE RECOMPENSA
    sponsor_curp VARCHAR(18) NOT NULL, -- PATROCINADOR RELACIONADO
    reward_level ENUM(
        'GREEN',
        'YELLOW',
        'RED',
        'PURPLE'
    ), -- NIVEL DE RECOMPENSA
    date_awarded TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- FECHA DE OTORGAMIENTO
    FOREIGN KEY (sponsor_curp) REFERENCES sponsor (curp) -- RELACION CON PATROCINADOR
);

-- PRODUCTOS OTORGADOS CON SOLICITUDES DE PAGO
CREATE TABLE payment_awarded_products (
    id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    payment_request_folio CHAR(36) NOT NULL, -- FOLIO DE LA SOLICITUD DE PAGO
    product_id INT NOT NULL, -- PRODUCTO RELACIONADO
    branch_id INT NOT NULL, -- SUCURSAL RELACIONADA
    FOREIGN KEY (payment_request_folio) REFERENCES payments_requests (folio) ON DELETE CASCADE, -- RELACION CON LA SOLICITUD DE PAGO
    FOREIGN KEY (product_id) REFERENCES products (product_id), -- RELACION CON PRODUCTO
    FOREIGN KEY (branch_id) REFERENCES branches (branch_id) -- RELACION CON SUCURSAL
);

-- BENEFICIOS DE FORMAR PARTE DE LA PLATAFORMA
CREATE TABLE benefits (
    id INT PRIMARY KEY AUTO_INCREMENT, -- ID DE RECOMPENSA
    title VARCHAR(255) NOT NULL, -- TIPO DE BENEFICIO
    description VARCHAR(255) NOT NULL, -- DESCRIPCION DE LA RECOMPENSA
    detail_description TEXT NOT NULL, -- MARK DOUW DETALLADO
    image VARCHAR(255) NOT NULL, -- IMAGEN RELACIONADA
    bg_stile VARCHAR(255) NOT NULL, -- STYLO DE FONDO
    for ENUM('COMPANY', 'SPONSOR'),
);